{"pageProps":{"frontMatter":{"title":"Getting Started with MDX in Next.js","date":"2023-08-15","description":"Learn how to use MDX to create interactive blog posts with embedded React components.","tags":["MDX","Next.js","React"]},"slug":"getting-started-with-mdx","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Quiz} = _components;\n  if (!Quiz) _missingMdxReference(\"Quiz\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Getting Started with MDX in Next.js\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MDX is a powerful format that lets you write JSX in your markdown documents. You can import components, such as interactive UI components, charts, or anything else you can build with React, and embed them within your content.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What is MDX?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MDX is markdown for the component era. It lets you write JSX embedded inside markdown. This is useful when you want to include interactive components within your content.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's a simple example of MDX syntax:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"# Hello, MDX!\\n\\nThis is some **bold** text.\\n\\n<Button onClick={() => alert('Hello')}>Click me</Button>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Using Components in MDX\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One of the great features of MDX is the ability to use React components directly in your markdown. Let's try out our Quiz component:\"\n    }), \"\\n\", _jsx(Quiz, {\n      question: \"What does MDX stand for?\",\n      options: [{\n        id: '1',\n        text: 'Markdown X',\n        isCorrect: false\n      }, {\n        id: '2',\n        text: 'Markdown Extended',\n        isCorrect: false\n      }, {\n        id: '3',\n        text: 'Markdown with JSX',\n        isCorrect: true\n      }, {\n        id: '4',\n        text: 'Markdown XML',\n        isCorrect: false\n      }],\n      explanation: \"MDX stands for Markdown with JSX, allowing you to use JSX components in your markdown content.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Code Syntax Highlighting\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MDX also supports code syntax highlighting. Here's an example of a React component:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"import React from 'react';\\n\\nfunction HelloWorld() {\\n  return (\\n    <div>\\n      <h1>Hello, World!</h1>\\n      <p>Welcome to my MDX blog!</p>\\n    </div>\\n  );\\n}\\n\\nexport default HelloWorld;\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And here's some CSS:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \".container {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 2rem;\\n}\\n\\n.title {\\n  color: #3b82f6;\\n  font-size: 2rem;\\n  margin-bottom: 1rem;\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Frontmatter\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MDX files can include frontmatter, which is YAML at the top of the file that contains metadata about the post. This blog uses frontmatter for:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Title\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Date\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Description\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tags\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"And any other metadata you want to include\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"MDX is a powerful tool for creating interactive blog posts. By combining the simplicity of markdown with the power of React components, you can create rich, interactive content that engages your readers.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Try creating your own MDX blog post and experiment with embedding different components!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"Getting Started with MDX in Next.js","date":"2023-08-15","description":"Learn how to use MDX to create interactive blog posts with embedded React components.","tags":["MDX","Next.js","React"]}}},"__N_SSG":true}